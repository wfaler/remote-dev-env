---
- hosts: all
  become: yes
  # run with ansible-playbook register-key.yml -i hosts --ask-pass --ask-sudo-pass -u [your username] --extra-vars "user=[your username]"

  tasks:
    
    - name: ensure apt cache is updated
      action: apt update_cache=yes

    - name: add group dev
      group: name='developers'

    - name: add dev user
      user: name='dev' groups="developers"

    - name: register key for default user
      action: authorized_key user='dev' key="{{ lookup('file', '~/.ssh/id_rsa.pub') }}"


    - name: register key for user ubuntu
      action: authorized_key user='dev' key="{{ lookup('file', '~/.ssh/id_rsa.pub') }}"      

    - name: register key for user ubuntu
      action: authorized_key user='root' key="{{ lookup('file', '~/.ssh/id_rsa.pub') }}"      

    - name: ensure software-properties-common is installed
      action: apt pkg=software-properties-common force=yes

    - name: ensure python-software-properties is installed
      action: apt pkg=python-software-properties force=yes

    - name: ensure java repository is registered
      action: apt_repository repo=ppa:webupd8team/java

#    - name: ensure emacs repository is registered
#      action: apt_repository repo=ppa:cassou/emacs

    - name: ensure ansible repository is registered
      action: apt_repository repo=ppa:ansible/ansible

    - name: ensure haskell repository is registered
      action: apt_repository repo=ppa:hvr/ghc

    - name: ensure nginx repository is registered
      action: apt_repository repo=ppa:nginx/stable

    - name: ensure postgres key is present
      action: apt_key id=ACCC4CF8 state=present url="https://www.postgresql.org/media/keys/ACCC4CF8.asc"

    - name: Ensure the postgres apt repository is added
      action: apt_repository state=present repo='deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main'

    - name: ensure apt cache is updated
      action: apt update_cache=yes

    - name: ensure all software is installed
      action: apt name={{item}}
      with_items:
        - emacs24
        - tmux
        - unzip
        - gnupg
        - git
        - terminator
        - xinit
        - tightvncserver
        - xmonad
        - xmobar
        - postgresql-9.6
        - libpq-dev
        - curl
        - wget
        - nodejs
        - firefox
        - build-essential
        - libssl-dev

    - name: Autoaccept license for Java
      action: shell echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | sudo /usr/bin/debconf-set-selections

    - name: ensure java is installed
      action: apt pkg=oracle-java8-installer force=yes

    - name: Ensure xmonad folder exists
      become: false
      remote_user: 'dev'
      file: path=/home/dev/.xmonad state=directory

    - name: copy xmonad config
      become: false
      remote_user: 'dev'
      copy: src=xmonad.hs dest=/home/dev/.xmonad/xmonad.hs owner=dev group=developers

    - name: copy .xsession config
      become: false
      remote_user: 'dev'
      copy: src=.xsession dest=/home/dev/.xsession owner=dev group=developers mode=0755

    - name: Ensure emacs.d folder exists
      become: false
      remote_user: 'dev'
      file: path=/home/dev/.emacs.d state=directory

    - name: init.el
      become: false
      remote_user: 'dev'
      copy: src=init.el dest=/home/dev/.emacs.d/init.el owner=dev group=developers
